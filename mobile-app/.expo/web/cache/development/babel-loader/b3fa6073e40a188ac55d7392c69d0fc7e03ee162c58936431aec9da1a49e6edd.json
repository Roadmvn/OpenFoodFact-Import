{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar api = axios.create({\n  baseURL: 'http://localhost:3000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(function () {\n  var _ref = _asyncToGenerator(function* (config) {\n    try {\n      var user = yield AsyncStorage.getItem('user');\n      if (user) {\n        var _JSON$parse = JSON.parse(user),\n          token = _JSON$parse.token;\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  });\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(), function (error) {\n  return Promise.reject(error);\n});\napi.interceptors.response.use(function (response) {\n  return response;\n}, function () {\n  var _ref2 = _asyncToGenerator(function* (error) {\n    var originalRequest = error.config;\n    if (error.response.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      try {\n        var user = yield AsyncStorage.getItem('user');\n        if (user) {\n          var _JSON$parse2 = JSON.parse(user),\n            refreshToken = _JSON$parse2.refreshToken;\n          var response = yield axios.post('http://localhost:3000/api/auth/refresh-token', {\n            refreshToken: refreshToken\n          });\n          var token = response.data.token;\n          var userData = JSON.parse(user);\n          userData.token = token;\n          yield AsyncStorage.setItem('user', JSON.stringify(userData));\n          originalRequest.headers.Authorization = `Bearer ${token}`;\n          return api(originalRequest);\n        }\n      } catch (refreshError) {\n        yield AsyncStorage.removeItem('user');\n      }\n    }\n    return Promise.reject(error);\n  });\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport default api;","map":{"version":3,"names":["axios","AsyncStorage","api","create","baseURL","headers","interceptors","request","use","_ref","_asyncToGenerator","config","user","getItem","_JSON$parse","JSON","parse","token","Authorization","error","Promise","reject","_x","apply","arguments","response","_ref2","originalRequest","status","_retry","_JSON$parse2","refreshToken","post","data","userData","setItem","stringify","refreshError","removeItem","_x2"],"sources":["/home/roadmvn/devops/Devops_starter/mobile-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Intercepteur pour ajouter le token d'authentification\napi.interceptors.request.use(\n  async (config) => {\n    try {\n      const user = await AsyncStorage.getItem('user');\n      if (user) {\n        const { token } = JSON.parse(user);\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Intercepteur pour gÃ©rer les erreurs d'authentification\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      try {\n        const user = await AsyncStorage.getItem('user');\n        if (user) {\n          const { refreshToken } = JSON.parse(user);\n          const response = await axios.post('http://localhost:3000/api/auth/refresh-token', {\n            refreshToken\n          });\n\n          const { token } = response.data;\n          const userData = JSON.parse(user);\n          userData.token = token;\n          await AsyncStorage.setItem('user', JSON.stringify(userData));\n\n          originalRequest.headers.Authorization = `Bearer ${token}`;\n          return api(originalRequest);\n        }\n      } catch (refreshError) {\n        await AsyncStorage.removeItem('user');\n        // Rediriger vers la page de connexion\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,2CAA2C;AAEpE,IAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAGFH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAC1B,WAAOC,MAAM,EAAK;IAChB,IAAI;MACF,IAAMC,IAAI,SAASX,YAAY,CAACY,OAAO,CAAC,MAAM,CAAC;MAC/C,IAAID,IAAI,EAAE;QACR,IAAAE,WAAA,GAAkBC,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;UAA1BK,KAAK,GAAAH,WAAA,CAALG,KAAK;QACbN,MAAM,CAACN,OAAO,CAACa,aAAa,GAAG,UAAUD,KAAK,EAAE;MAClD;MACA,OAAON,MAAM;IACf,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACd,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;IAC9B;EACF,CAAC;EAAA,iBAAAG,EAAA;IAAA,OAAAb,IAAA,CAAAc,KAAA,OAAAC,SAAA;EAAA;AAAA,KACD,UAACL,KAAK,EAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAGDjB,GAAG,CAACI,YAAY,CAACmB,QAAQ,CAACjB,GAAG,CAC3B,UAACiB,QAAQ;EAAA,OAAKA,QAAQ;AAAA;EAAA,IAAAC,KAAA,GAAAhB,iBAAA,CACtB,WAAOS,KAAK,EAAK;IACf,IAAMQ,eAAe,GAAGR,KAAK,CAACR,MAAM;IAEpC,IAAIQ,KAAK,CAACM,QAAQ,CAACG,MAAM,KAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;MAC5DF,eAAe,CAACE,MAAM,GAAG,IAAI;MAE7B,IAAI;QACF,IAAMjB,IAAI,SAASX,YAAY,CAACY,OAAO,CAAC,MAAM,CAAC;QAC/C,IAAID,IAAI,EAAE;UACR,IAAAkB,YAAA,GAAyBf,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;YAAjCmB,YAAY,GAAAD,YAAA,CAAZC,YAAY;UACpB,IAAMN,QAAQ,SAASzB,KAAK,CAACgC,IAAI,CAAC,8CAA8C,EAAE;YAChFD,YAAY,EAAZA;UACF,CAAC,CAAC;UAEF,IAAQd,KAAK,GAAKQ,QAAQ,CAACQ,IAAI,CAAvBhB,KAAK;UACb,IAAMiB,QAAQ,GAAGnB,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;UACjCsB,QAAQ,CAACjB,KAAK,GAAGA,KAAK;UACtB,MAAMhB,YAAY,CAACkC,OAAO,CAAC,MAAM,EAAEpB,IAAI,CAACqB,SAAS,CAACF,QAAQ,CAAC,CAAC;UAE5DP,eAAe,CAACtB,OAAO,CAACa,aAAa,GAAG,UAAUD,KAAK,EAAE;UACzD,OAAOf,GAAG,CAACyB,eAAe,CAAC;QAC7B;MACF,CAAC,CAAC,OAAOU,YAAY,EAAE;QACrB,MAAMpC,YAAY,CAACqC,UAAU,CAAC,MAAM,CAAC;MAEvC;IACF;IAEA,OAAOlB,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAC9B,CAAC;EAAA,iBAAAoB,GAAA;IAAA,OAAAb,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GACH,CAAC;AAED,eAAetB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}